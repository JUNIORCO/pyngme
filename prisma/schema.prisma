generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum EveryOption {
  FifteenMinutes
  Hour
  FourHours
  Day
}


model Pyng {
  // id
  id String @id @default(cuid())

  // properties
  stripeCustomerId String @map("stripe_customer_id")
  clerkUserId String @map("clerk_user_id")
  name String
  email String 
  every EveryOption
  timezone String 
  url String
  condition String
  triggerScheduleId String? @map("trigger_schedule_id")

  // relationships
  runs Run[]

  // dates
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // rename
  @@map("pyng")
}

model Run {
  // id
  id String @id @default(cuid())

  // properites
  scrape String
  reasoning String
  sentEmail Boolean @map("sent_email")
  clerkUserId String @map("clerk_user_id")

  // relationships
  pyngId String @map("pyng_id")
  pyng Pyng @relation(fields: [pyngId], references: [id], onDelete: Cascade)

  // dates
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // rename
  @@map("run")
}
